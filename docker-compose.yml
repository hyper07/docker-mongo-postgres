version: "3.1"

services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - db-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: PassW0rd
      POSTGRES_DB: db
      PGDATA: /var/lib/postgresql/data
    networks:
      - webnet

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - webnet
    restart: unless-stopped

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    depends_on:
      - postgres
    ports:
      - 8090:8080
    networks:
      - webnet

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - "db-mongodb:/var/lib/mongo/data"
      - "$PWD/mongo-entrypoint/:/docker-entrypoint-initdb.d/"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: PassW0rd
      MONGO_INITDB_DATABASE: db
    networks:
      - webnet

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    depends_on:
      - mongo
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: PassW0rd
      ME_CONFIG_MONGODB_URL: mongodb://admin:PassW0rd@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - webnet

  neo4j:
    # user: neo4j:neo4j
    container_name: neo4j
    image: neo4j
    ports:
      - 7687:7687
      - 7474:7474
    volumes:
      - db-neo4j:/data
    environment:
      - NEO4J_AUTH=${NEO4J_USERNAME-neo4j}/${NEO4J_PASSWORD-password}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_db_tx__log_rotation_retention__policy=false
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    healthcheck:
        test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
        interval: 15s
        timeout: 30s
        retries: 10
    networks:
      - webnet

  jupyter:
    build: 
      context: .
      dockerfile: ./docker/jupyter/Dockerfile
    volumes:
      - ./work:/home/jovyan/work
    ports:
      - 8888:8888
      - 5001:5001

    command: "start-notebook.sh --NotebookApp.token="

  app:
    container_name: app
    build: ./app
    restart: always
    depends_on:
      - "mongo"
      - "postgres"
      - "neo4j"
    command: ["/wait-for-it.sh", "postgres:5432", "--", "npm", "run", "prod"]
    ports:
      - "3000:3000"
    volumes:
      - ./app:/server
      - /app/node_modules
    networks:
      - webnet

volumes:
  db-postgres:
    driver: local
  db-mongodb:
    driver: local
  db-neo4j:
    driver: local
  pgadmin:
    driver: local

networks:
  webnet:
    driver: bridge
